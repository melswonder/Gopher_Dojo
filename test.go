package main // プログラムが実行可能なエントリポイントであることを示します

import "fmt" // 標準入出力パッケージ "fmt" をインポートします。これにより、Printlnなどの関数が使えるようになります。

func Later() func(string)string{ // 'Later'という名前の関数を定義しています。この関数は、戻り値として「string型の引数を1つ取り、string型を返す関数」を返します。
    var store string // 'Later'関数が呼び出されるたびに、この'store'というstring型の変数が初期化（空文字列）されます。この変数は、Laterが返す「内部の関数」によって共有され、記憶されます（クロージャ）。
    return func(next string)string { // 'Later'関数はここで「匿名関数」を定義し、それを戻り値として返します。この匿名関数が、文字列型の引数'next'を取り、文字列型を返します。
        s := store // 内部変数's'に、現在'store'に記憶されている値を代入します。
        store = next // 'store'の値を、今回の呼び出しで受け取った引数'next'で上書きします。これにより、次の呼び出しのために値が記憶されます。
        return s // 's'（つまり、今回の呼び出しの前に'store'に記憶されていた値）を戻り値として返します。
    }
}

func main() { // プログラムのメイン関数です。プログラムはここから実行が始まります。
    f := Later() // 'Later()'関数を呼び出し、その戻り値（stringを引数に取りstringを返す匿名関数）を変数'f'に代入します。この時点で、'f'は独自の'store'変数を持っています。
    fmt.Println(f("Hello")) // 'f'関数を"Hello"という引数で呼び出します。
                            // 1. 'store'はまだ空なので、's'には""が代入されます。
                            // 2. 'store'が"Hello"で上書きされます。
                            // 3. 's'（空文字列）が返され、出力されます。
    fmt.Println(f("My"))    // 'f'関数を"My"という引数で呼び出します。
                            // 1. 'store'は"Hello"なので、's'には"Hello"が代入されます。
                            // 2. 'store'が"My"で上書きされます。
                            // 3. 's'（"Hello"）が返され、出力されます。
    fmt.Println(f("name"))  // 'f'関数を"name"という引数で呼び出します。
                            // 1. 'store'は"My"なので、's'には"My"が代入されます。
                            // 2. 'store'が"name"で上書きされます。
                            // 3. 's'（"My"）が返され、出力されます。
    fmt.Println(f("is"))    // 'f'関数を"is"という引数で呼び出します。
                            // 1. 'store'は"name"なので、's'には"name"が代入されます。
                            // 2. 'store'が"is"で上書きされます。
                            // 3. 's'（"name"）が返され、出力されます。
    fmt.Println(f("Golang"))// 'f'関数を"Golang"という引数で呼び出します。
                            // 1. 'store'は"is"なので、's'には"is"が代入されます。
                            // 2. 'store'が"Golang"で上書きされます。
                            // 3. 's'（"is"）が返され、出力されます。
}